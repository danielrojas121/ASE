Frank Cabada fc2452
Duru Kahyaoglu dk2565
Advanced Software Engineering
HW 2 Toy Project
Practice with Development Technologies: Homework 2You can find the github link to our project:https://github.com/dhr2119/ASEThe pair programming toy system assignment can be found in the following directory of our github group page:https://github.com/dhr2119/ASE/tree/master/HW2-FrankDuruDescription of Our Toy System:Currently, our toy system accepts user input for username and password to check if the user exists and also has a signup function that accepts the email address, username and password. The database implementation of our toy system stores the username, password, and email address to validate user credentials upon login. It has an index.html page that accepts username and password for login and also a signup button to redirect potential clients who would like to signup to use our application. These users are redirected to our signup.html page, where they are asked to fill in their username, password and email address. Users that already have an account and enter the correct username and password combination are redirected to home.html page.Evaluation of the Product Development Procedure and Technologies Used:The toy system was a significant milestone for our team overall, since we decided to change our technology (the tools we listed in our project proposal) and we had a chance to test and explore the functionalities that each system offered. Each pair in our team decided to use a different database so that we could evaluate the advantages and the drawbacks of different systems in our next group meeting (not our stand-up meeting as the evaluation of technologies will take a longer time to discuss). We also learned many tools, including basic Bootstrap for styling, MySQL database integration into code and implementation of basic queries in python flask. While developing our toy system we realized that it would be more convenient for us to use python flask instead of java. For the front end, we used html and bootstrap and our database was MySQL. For static analysis we used pylint. Pylint was an effective tool that helped us to style our code in a standard way. This helped us a lot since our code is now more legible and can be easily understood by a third party. For scripting test cases, we are using Fabric, which enables us to run our program with specified test cases. We also included a simple FabFile which contains a function to run the program with the scripting tool. We listed a couple of test cases under this standard testing function to remind ourselves to use this script to test our code as we get more coding done. Sample test cases include:•	Checking if all of the html files are present in the directory•	Checking if the program redirects the user to the correct html page upon the entry of wrong username and password•	Checking if the program warns the user when the user attempts to skip filling in a field in the signup page•	Checking if the user enters an email address in the correct format (i.e. xxxx@y.com)